
68601e8060093d393df35952383d59396009380160173d828234f050f0ff
PUSH9	       601e8060093d393df3
        m => 0
        s => 601e8060093d393df3
MSIZE    -> 0
        m => 0
        s => 0 601e8060093d393df3
MSTORE	
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3     (00) 23 bytes  23+9 = 32 
        s => 0
CODESIZE	 -> 1e = 30
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3
        s => 1e
RETURNDATASIZE	-> 0
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3
        s => 0 1e
MSIZE	 -> 20 = 32
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3
        s => 20 0 1e
CODECOPY	
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000    current code 30 bytes  (00)2 bytes 
        s => 0
PUSH1	09
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 9
CODESIZE	-> 1e = 30
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 1e 9 
ADD	 -> 27 = 39
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 27
PUSH1	17 -> 23
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 17 27
RETURNDATASIZE	 -> 0
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 0 17 27
DUP3	
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 27 0 17 27
DUP3	
         m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 17 27 0 17 27
CALLVALUE	-> value
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => value 17 27 0 17 27
CREATE	-> creates a new ctr with the bytecode in memory from byte 23 for 39 bytes, this bytecode 601e8060093d393df368601e8060093d393df35952383d59396009380160173d828234f050f0ff
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => ctrAddr 0 17 27
POP	
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 0 17 27
CREATE	-> creates a contract with the same bytecode as the previous one
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => ctr2Addr
SELFDESTRUCT -> destroys the current contract
        m => 0000000000000000000000000000000000000000000000601e8060093d393df3 
             68601e8060093d393df35952383d59396009380160173d828234f050f0ff0000 
        s => 


Respose: The code creates two contracts with the same code 
the first one with value ethers and the second with 0 ether.
Finally destroys the current contract.
The deployed bytecode in the first 9 bytes will return the rest of the bytecode as data.

601e8060093d393df3
PUSH1	1e        -> 1e
DUP1	          -> 1e 1e
PUSH1	09        -> 9 1e 1e
RETURNDATASIZE	-> 0 9 1e 1e
CODECOPY	      -> copy to memory pos 0 from code starting at pos 9 1e(30) bytes 
RETURNDATASIZE	-> 0 1e
RETURN          -> return the memory offset = 0 size = 1e(30) bytes